library(tidyverse)
## Insert your file path to the data from your local computer
## Set wd using setwd('path) /Users/uofm_research/Rprojects/integrationNDVI/
file_path_read = './df250mCorn.csv'
file_path_write = './CornIntNDVI.csv'
df <- read_csv(file_path_read)
df$date <- as.Date(with(df, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
df <- df %>% filter(Year > 2005)
years_geoid_df <- group_split(df, Year, GEOID)
calcIntegratedNdvi <- function(county_year, start, end) {
if(is.na(county_year$NDVI)) {
county_year_output <- county_year[1,]
return(county_year_output)
}
county_year$NDVI <- county_year$NDVI /10000
ndviFunc <- splinefun(1:nrow(county_year), y = county_year$NDVI, method = "fmm", ties = mean)
county_year_output <- county_year[1,]
county_year_output$NDVI <- integrate(ndviFunc,start,end)$value
return(county_year_output)
}
results <- map(years_geoid_df, calcIntegratedNdvi, start=5, end=10)
results <- bind_rows(results) %>%
drop_na(results)
selected_counties <- results %>%
group_by(GEOID) %>%
summarise(n=n()) %>% filter(n==13)
results_full_history <- results %>%
filter(GEOID %in% selected_counties$GEOID)
write_csv(results_full_history, file_path_write)
## Test int NDVI
mod <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=results_full_history)
summary(mod)
results
results <- bind_rows(results) %>%
drop_na(results)
results <- bind_rows(results)
results
results <- drop_na(results)
results
library(tidyverse)
## Insert your file path to the data from your local computer
## Set wd using setwd('path) /Users/uofm_research/Rprojects/integrationNDVI/
file_path_read = './df250mCorn.csv'
file_path_write = './CornIntNDVI.csv'
df <- read_csv(file_path_read)
df$date <- as.Date(with(df, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
df <- df %>% filter(Year > 2005)
years_geoid_df <- group_split(df, Year, GEOID)
calcIntegratedNdvi <- function(county_year, start, end) {
if(is.na(county_year$NDVI)) {
county_year_output <- county_year[1,]
return(county_year_output)
}
county_year$NDVI <- county_year$NDVI /10000
ndviFunc <- splinefun(1:nrow(county_year), y = county_year$NDVI, method = "fmm", ties = mean)
county_year_output <- county_year[1,]
county_year_output$NDVI <- integrate(ndviFunc,start,end)$value
return(county_year_output)
}
results <- map(years_geoid_df, calcIntegratedNdvi, start=5, end=10)
results <- bind_rows(results)
results <- drop_na(results)
selected_counties <- results %>%
group_by(GEOID) %>%
summarise(n=n()) %>% filter(n==13)
results_full_history <- results %>%
filter(GEOID %in% selected_counties$GEOID)
write_csv(results_full_history, file_path_write)
## Test int NDVI
mod <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=results_full_history)
summary(mod)
cornIntNdvi
cornIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornIntNDVI.csv")
library(tidyselect)
cornIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornIntNDVI.csv")
cornMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornMaxNDVI.csv")
library(tidyverse)
cornIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornIntNDVI.csv")
cornMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornMaxNDVI.csv")
cornIntNdvi
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=cornIntNdvi)
summary(modInt)
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=cornMaxNdvi)
summary(modMax)
summary(modInt)
soybeanIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SoybeanIntNDVI.csv")
soybeanMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SoybeanMaxNDVI.csv")
soybeanMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SoyMaxNDVI.csv")
library(tidyverse)
## Insert your file path to the data from your local computer
file_path_read = '/Users/uofm_research/Rprojects/integrationNDVI/df250mSoybean.csv'
file_path_write = '/Users/uofm_research/Rprojects/integrationNDVI/SoybeanMaxNDVI.csv'
df <- read_csv(file_path_read)
df$date <- as.Date(with(df, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
df <- df %>% filter(Year > 2005)
years_geoid_df <- group_split(df, Year, GEOID)
calculateMaxNdvi = function(county_year) {
max_ndvi <- county_year[which.max(county_year$NDVI), ]
max_ndvi$NDVI <- max_ndvi$NDVI / 10000
return(max_ndvi)
}
results <- map(years_geoid_df, calculateMaxNdvi)
results <- bind_rows(results)
selected_counties <- results %>%
group_by(GEOID) %>%
summarise(n=n()) %>% filter(n==13)
results_full_history <- results %>%
filter(GEOID %in% selected_counties$GEOID)
write_csv(results_full_history, file_path_write)
## Test max NDVI
mod <- lm(yield ~ NDVI + I(NDVI^2) + GEOID,data=results_full_history)
summary(mod)
soybeanIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SoybeanIntNDVI.csv")
soybeanMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SoybeanMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=soybeanIntNdvi)
summary(modInt)
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=soybeanMaxNdvi)
summary(modMax)
summary(modInt)
library(tidyverse)
## Insert your file path to the data from your local computer
file_path_read = '/Users/uofm_research/Rprojects/integrationNDVI/df250mWinterWheat.csv'
file_path_write = '/Users/uofm_research/Rprojects/integrationNDVI/WinterWheatMaxNDVI.csv'
df <- read_csv(file_path_read)
df$date <- as.Date(with(df, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
df <- df %>% filter(Year > 2005)
years_geoid_df <- group_split(df, Year, GEOID)
calculateMaxNdvi = function(county_year) {
max_ndvi <- county_year[which.max(county_year$NDVI), ]
max_ndvi$NDVI <- max_ndvi$NDVI / 10000
return(max_ndvi)
}
results <- map(years_geoid_df, calculateMaxNdvi)
results <- bind_rows(results)
selected_counties <- results %>%
group_by(GEOID) %>%
summarise(n=n()) %>% filter(n==13)
results_full_history <- results %>%
filter(GEOID %in% selected_counties$GEOID)
write_csv(results_full_history, file_path_write)
## Test max NDVI
mod <- lm(yield ~ NDVI + I(NDVI^2) + GEOID,data=results_full_history)
summary(mod)
winterIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/WinterWheatIntNDVI.csv")
winterMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/WinterWheatMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=winterIntNdvi)
summary(modInt)
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=winterMaxNdvi)
summary(modMax)
summary(modInt)
summary(modMax)
summary(modInt)
library(tidyverse)
## Insert your file path to the data from your local computer
file_path_read = '/Users/uofm_research/Rprojects/integrationNDVI/df250mSpringWheat.csv'
file_path_write = '/Users/uofm_research/Rprojects/integrationNDVI/SpringWheatMaxNDVI.csv'
df <- read_csv(file_path_read)
df$date <- as.Date(with(df, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
df <- df %>% filter(Year > 2005)
years_geoid_df <- group_split(df, Year, GEOID)
calculateMaxNdvi = function(county_year) {
max_ndvi <- county_year[which.max(county_year$NDVI), ]
max_ndvi$NDVI <- max_ndvi$NDVI / 10000
return(max_ndvi)
}
results <- map(years_geoid_df, calculateMaxNdvi)
results <- bind_rows(results)
selected_counties <- results %>%
group_by(GEOID) %>%
summarise(n=n()) %>% filter(n==13)
results_full_history <- results %>%
filter(GEOID %in% selected_counties$GEOID)
write_csv(results_full_history, file_path_write)
## Test max NDVI
mod <- lm(yield ~ NDVI + I(NDVI^2) + GEOID,data=results_full_history)
summary(mod)
springIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SpringWheatIntNDVI.csv")
springMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SpringWheatMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=springIntNdvi)
summary(modInt)
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=springMaxNdvi)
summary(modMax)
### Winter Wheat Max outperforms 0.7908 to 0.7559
summary(modInt)
summary(modMax)
library(tidyverse)
## Insert your file path to the data from your local computer
## Pick Crop Type
file_path_read <- '/Users/uofm_research/Rprojects/integrationNDVI/df250mCorn.csv'
file_path_write <- '/Users/uofm_research/Rprojects/integrationNDVI/CornIntNDVI.csv'
file_path_start_end_dates <- '/Users/uofm_research/Rprojects/integrationNDVI/CornStartAndEndDates.csv'
start_end_dates <- read_csv(file_path_start_end_dates)
start_end_dates$STATEFP <- as.character(start_end_dates$STATEFP)
start_end_dates <- drop_na(start_end_dates)
states <- unique(start_end_dates$STATEFP)
df <- read_csv(file_path_read)
df$date <- as.Date(with(df, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
df <- df %>% filter(Year > 2005 & STATEFP %in% states)
years_geoid_df <- group_split(df, Year, GEOID)
calcIntegratedNdvi <- function(county_year) {
if(sum(is.na(county_year$NDVI)) > 0)  {
county_year_output <- county_year[1,]
return(county_year_output)
}
county_year$NDVI <- county_year$NDVI /10000
ndviFunc <- splinefun(1:nrow(county_year), y = county_year$NDVI, method = "fmm", ties = mean)
county_year_output <- county_year[1,]
start_and_end <- start_end_dates %>% filter(STATEFP == county_year_output$STATEFP & Year == county_year_output$Year)
start <- round(lubridate::yday(start_and_end$StartDate) / 16)
end <- round(lubridate::yday(start_and_end$EndDate) / 16)
county_year_output$NDVI <- integrate(ndviFunc,start,end)$value
return(county_year_output)
}
results <- map(years_geoid_df, calcIntegratedNdvi)
results <- bind_rows(results)
results <- drop_na(results)
selected_counties <- results %>%
group_by(GEOID) %>%
summarise(n=n()) %>% filter(n==13)
results_full_history <- results %>%
filter(GEOID %in% selected_counties$GEOID)
write_csv(results_full_history, file_path_write)
## Test int NDVI
mod <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=results_full_history)
summary(mod)
library(tidyverse)
## Insert your file path to the data from your local computer
## Pick Crop Type
file_path_read <- '/Users/uofm_research/Rprojects/integrationNDVI/df250mSoybean.csv'
file_path_write <- '/Users/uofm_research/Rprojects/integrationNDVI/SoybeanIntNDVI.csv'
file_path_start_end_dates <- '/Users/uofm_research/Rprojects/integrationNDVI/SoybeanStartAndEndDates.csv'
start_end_dates <- read_csv(file_path_start_end_dates)
start_end_dates$STATEFP <- as.character(start_end_dates$STATEFP)
start_end_dates <- drop_na(start_end_dates)
states <- unique(start_end_dates$STATEFP)
df <- read_csv(file_path_read)
df$date <- as.Date(with(df, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
df <- df %>% filter(Year > 2005 & STATEFP %in% states)
years_geoid_df <- group_split(df, Year, GEOID)
calcIntegratedNdvi <- function(county_year) {
if(sum(is.na(county_year$NDVI)) > 0)  {
county_year_output <- county_year[1,]
return(county_year_output)
}
county_year$NDVI <- county_year$NDVI /10000
ndviFunc <- splinefun(1:nrow(county_year), y = county_year$NDVI, method = "fmm", ties = mean)
county_year_output <- county_year[1,]
start_and_end <- start_end_dates %>% filter(STATEFP == county_year_output$STATEFP & Year == county_year_output$Year)
start <- round(lubridate::yday(start_and_end$StartDate) / 16)
end <- round(lubridate::yday(start_and_end$EndDate) / 16)
county_year_output$NDVI <- integrate(ndviFunc,start,end)$value
return(county_year_output)
}
results <- map(years_geoid_df, calcIntegratedNdvi)
results <- bind_rows(results)
results <- drop_na(results)
selected_counties <- results %>%
group_by(GEOID) %>%
summarise(n=n()) %>% filter(n==13)
results_full_history <- results %>%
filter(GEOID %in% selected_counties$GEOID)
write_csv(results_full_history, file_path_write)
## Test int NDVI
mod <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=results_full_history)
summary(mod)
library(tidyverse)
## Insert your file path to the data from your local computer
## Pick Crop Type
file_path_read <- '/Users/uofm_research/Rprojects/integrationNDVI/df250mWinterWheat.csv'
file_path_write <- '/Users/uofm_research/Rprojects/integrationNDVI/WinterWheatIntNDVI.csv'
file_path_start_end_dates <- '/Users/uofm_research/Rprojects/integrationNDVI/WinterWheatStartAndEndDates.csv'
start_end_dates <- read_csv(file_path_start_end_dates)
start_end_dates$STATEFP <- as.character(start_end_dates$STATEFP)
start_end_dates <- drop_na(start_end_dates)
states <- unique(start_end_dates$STATEFP)
df <- read_csv(file_path_read)
df$date <- as.Date(with(df, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
df <- df %>% filter(Year > 2005 & STATEFP %in% states)
years_geoid_df <- group_split(df, Year, GEOID)
calcIntegratedNdvi <- function(county_year) {
if(sum(is.na(county_year$NDVI)) > 0)  {
county_year_output <- county_year[1,]
return(county_year_output)
}
county_year$NDVI <- county_year$NDVI /10000
ndviFunc <- splinefun(1:nrow(county_year), y = county_year$NDVI, method = "fmm", ties = mean)
county_year_output <- county_year[1,]
start_and_end <- start_end_dates %>% filter(STATEFP == county_year_output$STATEFP & Year == county_year_output$Year)
start <- round(lubridate::yday(start_and_end$StartDate) / 16)
end <- round(lubridate::yday(start_and_end$EndDate) / 16)
county_year_output$NDVI <- integrate(ndviFunc,start,end)$value
return(county_year_output)
}
results <- map(years_geoid_df, calcIntegratedNdvi)
results <- bind_rows(results)
results <- drop_na(results)
selected_counties <- results %>%
group_by(GEOID) %>%
summarise(n=n()) %>% filter(n==13)
results_full_history <- results %>%
filter(GEOID %in% selected_counties$GEOID)
write_csv(results_full_history, file_path_write)
## Test int NDVI
mod <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=results_full_history)
summary(mod)
library(tidyverse)
## Insert your file path to the data from your local computer
## Pick Crop Type
file_path_read <- '/Users/uofm_research/Rprojects/integrationNDVI/df250mSpringWheat.csv'
file_path_write <- '/Users/uofm_research/Rprojects/integrationNDVI/SpringWheatIntNDVI.csv'
file_path_start_end_dates <- '/Users/uofm_research/Rprojects/integrationNDVI/SpringWheatStartAndEndDates.csv'
start_end_dates <- read_csv(file_path_start_end_dates)
start_end_dates$STATEFP <- as.character(start_end_dates$STATEFP)
start_end_dates <- drop_na(start_end_dates)
states <- unique(start_end_dates$STATEFP)
df <- read_csv(file_path_read)
df$date <- as.Date(with(df, paste(Year, Month, Day,sep="-")), "%Y-%m-%d")
df <- df %>% filter(Year > 2005 & STATEFP %in% states)
years_geoid_df <- group_split(df, Year, GEOID)
calcIntegratedNdvi <- function(county_year) {
if(sum(is.na(county_year$NDVI)) > 0)  {
county_year_output <- county_year[1,]
return(county_year_output)
}
county_year$NDVI <- county_year$NDVI /10000
ndviFunc <- splinefun(1:nrow(county_year), y = county_year$NDVI, method = "fmm", ties = mean)
county_year_output <- county_year[1,]
start_and_end <- start_end_dates %>% filter(STATEFP == county_year_output$STATEFP & Year == county_year_output$Year)
start <- round(lubridate::yday(start_and_end$StartDate) / 16)
end <- round(lubridate::yday(start_and_end$EndDate) / 16)
county_year_output$NDVI <- integrate(ndviFunc,start,end)$value
return(county_year_output)
}
results <- map(years_geoid_df, calcIntegratedNdvi)
results <- bind_rows(results)
results <- drop_na(results)
selected_counties <- results %>%
group_by(GEOID) %>%
summarise(n=n()) %>% filter(n==13)
results_full_history <- results %>%
filter(GEOID %in% selected_counties$GEOID)
write_csv(results_full_history, file_path_write)
## Test int NDVI
mod <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=results_full_history)
summary(mod)
library(tidyverse)
cornIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornIntNDVI.csv")
cornMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=cornIntNdvi)
summary(modInt)
soybeanIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SoybeanIntNDVI.csv")
soybeanMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SoybeanMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=soybeanIntNdvi)
summary(modInt)
winterIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/WinterWheatIntNDVI.csv")
winterMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/WinterWheatMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=winterIntNdvi)
summary(modInt)
springIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SpringWheatIntNDVI.csv")
springMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SpringWheatMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=springIntNdvi)
summary(modInt)
library(stargazer)
install.packages('stargazer')
library(stargazer)
cornIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornIntNDVI.csv")
library(tidyverse)
library(stargazer)
cornIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornIntNDVI.csv")
cornMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=cornIntNdvi)
summary(modInt)
summary(modInt, style='qje', omit = '$GEO')
summary(modInt, style='qje', omit = '^GEO')
summary(modInt, style='qje', omit = '^GEO')
summary(modInt, style='qje', omit = "^GEO")
summary(modInt, style='qje', omit = "^GEO*")
summary(modInt, style='qje', omit = "GEOID")
summary(modInt, style='qje', omit = GEOID)
modInt <- lm(yield ~ NDVI + I(NDVI^2) + as.factor(GEOID), data=cornIntNdvi)
summary(modInt, style='qje', omit = "as.factor")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=cornIntNdvi)
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=cornIntNdvi)
stargazer(modInt, style='qje', omit="GEOID")
stargazer(modInt, style='qje', omit='GEOID', type='text')
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=cornMaxNdvi)
summary(modMax)
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text')
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text', dep.var.caption='Corn Yield')
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text', dep.var.labels='Corn Yield')
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Corn Yield',
column.labels = c("Integrated NDVI","Max NDVI"),title="")
cornMaxNdvi
cornMaxNdvi$NDVI[1:100]
cornIntNdvi$NDVI[1:100]
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Corn Yield',
column.labels = c("Integrated NDVI","Max NDVI"),title="")
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Corn Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared"))
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Corn Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared"))
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Corn Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI_squared"))
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Corn Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared, Constant"))
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Corn Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared", "Constant"))
soybeanIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SoybeanIntNDVI.csv")
soybeanMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SoybeanMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=soybeanIntNdvi)
summary(modInt)
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=soybeanMaxNdvi)
summary(modMax)
## Max NDVI outperforms 0.7713 to 0.5728
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Soybean Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared", "Constant"))
winterIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/WinterWheatIntNDVI.csv")
winterMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/WinterWheatMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=winterIntNdvi)
summary(modInt)
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=winterMaxNdvi)
summary(modMax)
### Winter Wheat Max outperforms 0.7908 to 0.753
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Winter-Wheat Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared", "Constant"))
springIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SpringWheatIntNDVI.csv")
springMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SpringWheatMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=springIntNdvi)
summary(modInt)
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=springMaxNdvi)
summary(modMax)
### Spring Wheat Max outperforms 0.4223 to 0.2214
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Spring-Wheat Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared", "Constant"))
### Spring Wheat Max outperforms 0.4223 to 0.2214
stargazer(modInt, modMax, style='qje', omit='GEOID', type='latex',
dep.var.labels='Spring-Wheat Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared", "Constant"))
library(tidyverse)
library(stargazer)
cornIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornIntNDVI.csv")
cornMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/CornMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=cornIntNdvi)
summary(modInt)
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=cornMaxNdvi)
summary(modMax)
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Corn Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared", "Constant"))
stargazer(modInt, modMax, style='qje', omit='GEOID', type='latex',
dep.var.labels='Corn Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared", "Constant"))
soybeanIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SoybeanIntNDVI.csv")
soybeanMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SoybeanMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=soybeanIntNdvi)
summary(modInt)
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=soybeanMaxNdvi)
summary(modMax)
## Max NDVI outperforms 0.7713 to 0.5728
stargazer(modInt, modMax, style='qje', omit='GEOID', type='text',
dep.var.labels='Soybean Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared", "Constant"))
## Max NDVI outperforms 0.7713 to 0.5728
stargazer(modInt, modMax, style='qje', omit='GEOID', type='latex',
dep.var.labels='Soybean Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared", "Constant"))
winterIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/WinterWheatIntNDVI.csv")
winterMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/WinterWheatMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=winterIntNdvi)
summary(modInt)
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=winterMaxNdvi)
summary(modMax)
### Winter Wheat Max outperforms 0.7908 to 0.753
stargazer(modInt, modMax, style='qje', omit='GEOID', type='latex',
dep.var.labels='Winter-Wheat Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared", "Constant"))
springIntNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SpringWheatIntNDVI.csv")
springMaxNdvi <- read_csv("/Users/uofm_research/Rprojects/integrationNDVI/SpringWheatMaxNDVI.csv")
modInt <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=springIntNdvi)
summary(modInt)
modMax <- lm(yield ~ NDVI + I(NDVI^2) + GEOID, data=springMaxNdvi)
summary(modMax)
### Spring Wheat Max outperforms 0.4223 to 0.2214
stargazer(modInt, modMax, style='qje', omit='GEOID', type='latex',
dep.var.labels='Spring-Wheat Yield',
column.labels = c("Integrated NDVI","Max NDVI"),
covariate.labels = c("NDVI", "NDVI-squared", "Constant"))
